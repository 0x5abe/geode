name: Build Binaries

on:
  workflow_dispatch:
    inputs:
      build-debug-info:
        description: 'Profile and debug the build process'
        required: false
        default: false
        type: boolean
      use-ccache:
        description: 'Enable ccache/sccache'
        required: false
        default: true
        type: boolean
  pull_request:
  push:
    branches:
    - '**'              # every branch
    - '!no-build-**'    # unless marked as no-build

env:
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm-cache
  base-configure-command: >-
    cmake -B build
    -DCMAKE_BUILD_TYPE=RelWithDebInfo
    -DGEODE_CODEGEN_CMAKE_ARGS="-DCMAKE_C_COMPILER=clang;-DCMAKE_CXX_COMPILER=clang++;-G Ninja"
    -G Ninja
  base-build-command: |
    cmake --build build --config RelWithDebInfo --parallel
    rm bin/nightly/resources/.geode_cache

jobs:

  build-ios:
    if: "!contains(github.event.head_commit_message, '[skip]')"
    name: Build iOS
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Prepare for Build Debug Info
      id: build-debug-info
      uses: ./.github/actions/build-debug-info
      with:
        has-sccache: ${{ inputs.use-ccache }}
      if: inputs.build-debug-info

    - name: Setup caches
      uses: ./.github/actions/setup-cache
      with:
        host: mac
        target: ios
        use-ccache: ${{ github.event_name != 'workflow_dispatch' || inputs.use-ccache }}

    - name: Setup Ninja
      uses: ./.github/actions/setup-ninja
      with:
        host: mac

    - name: Install LLVM
      run: |
        brew install llvm
        echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH

    - name: Setup CLI
      uses: geode-sdk/cli/.github/actions/setup@main

    - name: Configure
      run: >
        ${{ env.base-configure-command }}
        -DGEODE_TARGET_PLATFORM=iOS
        -DCMAKE_SYSTEM_NAME=iOS
        -DGEODE_DONT_BUILD_TEST_MODS=ON
        -DCMAKE_BUILD_TYPE=RelWithDebInfo
        ${{ steps.build-debug-info.outputs.extra-configure }}

    - name: Build
      run: |
        ${{ env.base-build-command }}
        ${{ steps.build-debug-info.outputs.extra-build }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: geode-ios
        path: ./bin/nightly

    - name: Complete Build Debug Info
      uses: ./.github/actions/build-debug-info-post
      with:
        target: mac
      if: inputs.build-debug-info && (success() || failure())


  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [ build-ios ]
    if: github.ref == 'refs/heads/ios'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Declare Version Variables
        id: ref
        run: |
          echo "version=$(cat VERSION | xargs)" >> $GITHUB_OUTPUT
          echo "hash=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT

      - name: Download Artifacts
        uses: actions/download-artifact@v4


      - name: Zip iOS Artifacts
        uses: vimtor/action-zip@v1.2
        with:
          files: geode-ios/Geode.ios.dylib
          dest: geode-${{ steps.ref.outputs.hash }}-ios.zip

      - name: Zip Resources
        uses: vimtor/action-zip@v1.2
        with:
          files: geode-android64/resources
          dest: resources.zip

      - name: Update Development Release
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          name: 'Development Release'
          body: |
            Geode development release for commit ${{ github.sha }}. Since this is not a regular release, Geode will not install the resources automatically, so you should use the installer if you want them.
          files: |
            ./geode-installer-${{ steps.ref.outputs.hash }}-win.exe
            ./geode-installer-${{ steps.ref.outputs.hash }}-mac.pkg
            ./geode-${{ steps.ref.outputs.hash }}-win.zip
            ./geode-${{ steps.ref.outputs.hash }}-mac.zip
            ./geode-${{ steps.ref.outputs.hash }}-android32.zip
            ./geode-${{ steps.ref.outputs.hash }}-android64.zip
            ./geode-${{ steps.ref.outputs.hash }}-ios.zip
            ./resources.zip
